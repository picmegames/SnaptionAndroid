apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply plugin: 'jacoco'

repositories {
    maven {
        url 'https://maven.fabric.io/public'
    }
    mavenCentral()
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.snaptiongame.app"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 22
        versionName "1.0.8"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            testCoverageEnabled true
            buildConfigField "String", "SERVER_ENDPOINT", "\"https://35.184.24.183/\""
        }

        release {
            debuggable false
            minifyEnabled true
            testCoverageEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "SERVER_ENDPOINT", "\"https://api.snaptiongame.com/\""
        }
    }

    signingConfigs {
        debug {
            storeFile file('keystores/debug.keystore')
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storePassword 'android'
        }
    }

    packagingOptions {
        exclude 'META-INF/MANIFEST.MF'
    }

    dexOptions {
        javaMaxHeapSize "4g"
        jumboMode true
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

task jacocoTestReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = files("${buildDir}/jacoco/testDebugUnitTest.exec")
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Testing Dependencies

    // AssertJ
    testImplementation "org.assertj:assertj-core:$assertjVersion"

    // JUnit
    testImplementation "junit:junit:$junitVersion"

    // Mockito
    testImplementation "org.mockito:mockito-core:$mockitoVersion"

    // Robolectric
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "org.robolectric:shadows-support-v4:$robolectricShadowsVersion"

    // Support Testing Libraries
    androidTestImplementation "com.android.support:support-annotations:$supportLibVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "com.android.support.test:runner:$androidTestVersion"
    androidTestImplementation "com.android.support.test:rules:$androidTestVersion"

    // Developer Dependencies

    // Butterknife
    implementation "com.jakewharton:butterknife:$butterknifeVersion"
    kapt "com.jakewharton:butterknife-compiler:$butterknifeVersion"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlinVersion"

    // Multidex
    implementation "com.android.support:multidex:$multidexVersion"

    // Timber
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // Application Dependencies

    // Branch
    implementation ("io.branch.sdk.android:library:$branchVersion") {
        exclude module: 'answers-shim'
    }

    // CircleImageView
    implementation "de.hdodenhof:circleimageview:$circleImageViewVersion"

    // Crashlytics
    implementation ("com.crashlytics.sdk.android:crashlytics:$crashlyticsVersion") {
        transitive = true
    }

    // Facebook Login
    implementation "com.facebook.android:facebook-android-sdk:$facebookSdkVersion"

    // Firebase
    implementation "com.google.firebase:firebase-core:$playServicesVersion"
    implementation "com.google.firebase:firebase-config:$playServicesVersion"
    implementation "com.google.firebase:firebase-messaging:$playServicesVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"
    implementation "jp.wasabeef:glide-transformations:$glideTransformationsVersion"

    // Google Login
    implementation "com.google.android.gms:play-services-auth:$playServicesVersion"

    // Google Play Billing
    implementation "com.android.billingclient:billing:$playBillingVersion"

    // Lottie
    implementation "com.airbnb.android:lottie:$lottieVersion"

    // Material Dialogs
    implementation "com.afollestad.material-dialogs:core:$materialDialogsVersion"

    // Material Showcase View
    implementation "com.github.deano2390:MaterialShowcaseView:$materialShowcaseView"

    // Nachos
    implementation "com.hootsuite.android:nachos:$nachosVersion"

    // OkHttp
    implementation "com.squareup.okhttp3:okhttp-urlconnection:$okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"

    // PhotoView
    implementation "com.github.chrisbanes:PhotoView:$photoViewVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"

    // RxJava
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"

    // Support Libraries
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support:design:$supportLibVersion"
    implementation "com.android.support:exifinterface:$supportLibVersion"
    implementation "com.android.support:palette-v7:$supportLibVersion"

    // Text Drawable
    implementation "com.amulyakhare:com.amulyakhare.textdrawable:$textDrawableVersion"
}

apply plugin: 'com.google.gms.google-services'
